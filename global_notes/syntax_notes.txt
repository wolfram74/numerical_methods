'implicit none'
  code block must define type of a variable before it is assigned a value

'gfortran -o file.out file.f90'
  compiles file.f90 source code into
'./file.out'
  runs produced program

conditional block
'''
if (boolean) then
  code-block
end if
'''

serial-conditional block
'''
if (boolean) then
  code-block
else if (boolean) then
  code-block
else (boolean) then
  code-block
end if
'''

comparators
'''
/= ! not equals
.and. ! logical and
.or. ! logical or
'''

data inspection
'''
kind(z) !returns bit size of variable
'''

define data structure
'''
type type_name
  specify variables from existing types
end type type_name
'''

invoke data structure
'''
type(type_name) :: var_name
var_name%sub_var1 = data1
...
var_name%sub_varn = datan
'''

array declaration
'''
  real, dimension(n,m) :: arr1
  real :: arr2(j,k)
'''

input intent declaration, for immutable variables
'''
  intent(in) :: input_var
'''
arr1 and arr2 are 2-D arrays of with n,j rows and m,k columns respectively
if n were 1 then you'd have a row vector, if m were 1 you'd have a column vector

wiki references on real precision
http://fortranwiki.org/fortran/show/Real+precision

documentation on setting real-precision
  https://gcc.gnu.org/onlinedocs/gfortran/SELECTED_005fREAL_005fKIND.html

